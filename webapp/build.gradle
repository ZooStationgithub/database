import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

group 'nl.zoostation'
version '1.1.0-SHAPSHOT'

apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def env = project.hasProperty("env") ? project.properties['env'] : 'dev'
sourceSets.main.resources.srcDirs += "src/main/profiles/" + env

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // Utilities
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'

    // Database
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.0.8'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.3.Final'
    compile group: 'org.hibernate', name: 'hibernate-ehcache', version: '5.2.3.Final'
    compile group: 'org.hibernate', name: 'hibernate-java8', version: '5.2.3.Final'
    compile group: 'net.sf.ehcache', name: 'ehcache-core', version: '2.6.11'
    compile group: 'org.springframework', name: 'spring-context', version: '4.3.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-orm', version: '4.3.4.RELEASE'

    // Web
    compile group: 'org.springframework', name: 'spring-webmvc', version: '4.3.4.RELEASE'
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.3'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.7.3'
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'

    // Validation
    compile group: 'javax.validation', name: 'validation-api', version: '1.1.0.Final'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.3.0.Final'

    // Mail
    compile group: 'javax.mail', name: 'mail', version: '1.4.7'
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.23'

    // Security
    compile group: 'org.springframework.security', name: 'spring-security-web', version: '4.1.3.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-config', version: '4.1.3.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-taglibs', version: '4.1.3.RELEASE'

    // AOP
    compile group: 'org.springframework', name: 'spring-aop', version: '4.3.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-aspects', version: '4.3.4.RELEASE'
    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.8.9'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.9'

    // Testing
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.3.0'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.6.1'
    testCompile group: 'org.hsqldb', name: 'hsqldb', version: '2.2.8'
    testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.4.RELEASE'
    testCompile group: 'org.dbunit', name: 'dbunit', version: '2.5.0'
    testCompile group: 'com.github.springtestdbunit', name: 'spring-test-dbunit', version: '1.2.0'
    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.2.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
}

war {
    def templateName = "zsdb%s.war"
    archiveName = (env == 'dev') ? String.format(templateName, "")
            : String.format(templateName, '-' + env + '-' + version + '-' + LocalDateTime.now().format(DateTimeFormatter.ofPattern('yyyyMMddHHmmss')))
    duplicatesStrategy = 'WARN'
}

jacocoTestReport {
    reports {
        html.destination "${buildDir}/reports/coverage"
        xml.enabled = false
        csv.enabled = false
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'nl/zoostation/database/app/config/**',
                    'nl/zoostation/database/app/Constants**',
                    'nl/zoostation/database/model/**',
                    'nl/zoostation/database/aspect/ExceptionTranslatorAspect.class'
            ])
        })
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

